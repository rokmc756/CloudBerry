---
- name: Create hostfile_all file for All Nodes
  lineinfile:
    path: "/tmp/hostfile_all"
    line: "{{ hostvars[item]['ansible_hostname'] }}"
    state: present
    create: yes
  register: hostfile_all_created
  ignore_errors: true
  with_items: "{{ groups['all'] }}"
  when: ( inventory_hostname in groups['master'] )


- name: Check if Any Version of CloudBerry Database is Already Linked
  stat: path={{ cbdb.base_dir }}/{{ cbdb.pkg_name }}
  register: check_cbdb_link


- name: Check if the CloudBerry Database Version is Already Installed
  stat: path={{ cbdb.base_dir }}/{{ cbdb.pkg_name }}-{{ cbdb.major_version }}.{{ cbdb.minor_version }}.{{ cbdb.patch_version }}
  register: check_cbdb_dir


- name: Sanity Check for {{ cbdb.base_dir }}/{{ cbdb.pkg_name }}
  fail: msg="CloudBerry Database Software is not existed"
  when: check_cbdb_dir.stat.exists != True and check_cbdb_link.stat.islnk != True


- name: Set Name for Binary Installer File ( Name Includes Build Number )
  set_fact:
    cbdb_dir: "{{ cbdb.pkg_name }}-{{ cbdb.major_version }}.{{ cbdb.minor_version }}.{{ cbdb.patch_version }}"
    cbdb_package_name: "{{ cbdb.pkg_name }}-{{ cbdb.major_version }}.{{ cbdb.minor_version }}.{{ cbdb.patch_version }}-{{ cbdb.build_version }}"
    binary_installer_file: "{{ cbdb.pkg_name }}-{{ cbdb.major_version }}.{{ cbdb.minor_version }}-{{ cbdb.patch_version }}.{{ cbdb.os_name }}-{{ cbdb.arch_name }}"


- name: Identify CloudBerry Database Uninstallation
  set_fact:
    cbdb_uninstall: true
  when: check_cbdb_dir.stat.exists == True and check_cbdb_link.stat.islnk == True


# If the link points to a different existing directory, it's a link change
- name: Identify CloudBerry Database Linkchange
  set_fact:
    cbdb_unlinkchange: true
  when: check_cbdb_dir.stat.exists == True and check_cbdb_link.stat.islnk == True


- name: CloudBerry Database Uninstallation
  debug: msg="Uninstall CloudBerry Database"
  when: cbdb_uninstall == true


- name: CloudBerry Database Linkchange
  debug: msg="Delete link to CloudBerry Database version"
  when: cbdb_unlinkchange == True


- name: CloudBerry Database - Nothing to Do
  debug: msg="Nothing to do (Uo Uninstall/Delete Link Required)"
  when: cbdb_uninstall == False and cbdb_unlinkchange == False


# Database Uninstallation
- name: Check if CloudBerry Database is Running
  stat: path=/tmp/.s.PGSQL.5432
  register: cbdb_running
  when: inventory_hostname in groups['master'] and ( cbdb_uninstall == True or cbdb_unlinkchange == True )


- name: Verify that CloudBerry Database is Up and Running
  become_user: gpadmin
  shell: ( . {{ cbdb.base_dir }}/{{ cbdb.pkg_name }}/greenplum_path.sh && psql -c "SELECT VERSION()" )
  register: select_version
  ignore_errors: true
  failed_when: "'(Cloudberry Database ' not in select_version.stdout"
  when: inventory_hostname in groups['master']


- name: Shutdown CloudBerry Database
  become_user: gpadmin
  shell: ( . {{ cbdb.base_dir }}/{{ cbdb.pkg_name }}/greenplum_path.sh && gpstop -a )
  async: 60
  poll: 5
  register: shutdown_database
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] and cbdb_running.stat.exists == true and "'(Cloudberry Database ' not in select_version.stdout" )


- name: Uninstall CloudBerry Database Software Package
  package:
    name: "{{ cbdb.pkg_name }}"
    state: absent
  ignore_errors: true
  async: 60
  poll: 5
  when: ( cbdb_uninstall == True and cbdb_unlinkchange == True )



- name: Delete {{ cbdb.coordinator_data_dir }} for Master Data Directories
  file:
    path: "{{ cbdb.coordinator_data_dir }}"
    state: absent
  ignore_errors: true
  when: ( inventory_hostname in groups['master'] or inventory_hostname in groups['standby'] ) and ( cbdb_uninstall == True and cbdb_unlinkchange == True )


- name: Delete {{ cbdb.data_dir }} Segment Data Directories
  file:
    path: "{{ cbdb.data_dir }}/{{ item }}"
    state: absent
  ignore_errors: true
  with_items:
    - "primary"
    - "mirror"
    - ""
  when: inventory_hostname in groups['segments'] and ( cbdb_uninstall == True and cbdb_unlinkchange == True )


- name: Delete gpinitsystem Config File and hostlist File
  file:
    path: "{{ item }}"
    state: absent
  ignore_errors: true
  with_items:
    - "/home/gpadmin/gpinitsystem_config"
    - "/home/gpadmin/hostfile"
    - "/home/gpadmin/hostfile_all"
  when: inventory_hostname in groups['master'] and ( cbdb_uninstall == True or cbdb_unlinkchange == True )


- name: Delete SSH Public Keys and Remaining Settings in All Hosts
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/home/gpadmin/{{ binary_installer_file }}.{{ cbdb.binary_type }}"
    - "/etc/sysctl.d/98-sysctl-cbdb.conf"
  when: ( cbdb_uninstall == True or cbdb_unlinkchange == True )


- name: Delete CloudBerry Database Directories
  file:
    path: "{{ item }}"
    state: absent
  ignore_errors: true
  with_items:
    - "{{ cbdb.base_dir }}/{{ cbdb.pkg_name }}"
    - "{{ cbdb.base_dir }}/{{ cbdb_dir }}"
  when: ( cbdb_uninstall == True and cbdb_unlinkchange == True )



- name: CloudBerry Database Uninstallation
  debug: msg="CloudBerry Database {{ cbdb.major_version }}.{{ cbdb.minor_version }} uninstalled"
  when: cbdb_uninstall == True
  ignore_errors: true
  notify:
    - Reload Sysctl
    - Start IPtables
    - Start Firewalld
    - Enable SELinux
    - Restart System
    - Waiting for Server to Come Back after Reboot

